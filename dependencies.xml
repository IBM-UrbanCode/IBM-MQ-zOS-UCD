<?xml version="1.0" encoding="UTF-8"?>
<!--
- Licensed Materials - Property of IBM Corp.
- IBM UrbanCode Deploy
- (c) Copyright IBM Corporation 2011, 2014. All Rights Reserved.
-
- U.S. Government Users Restricted Rights - Use, duplication or disclosure restricted by
- GSA ADP Schedule Contract with IBM Corp.
-->
<project xmlns="http://www.urbancode.com/schema/cs/project-dependencies/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        name="zosmf" workflow="build workflow [air]">

  <dependencies conflictStrategy="FAIL">

    <!-- ############################################################ -->
    <!-- RUNTIME                                                      -->
    <!-- ############################################################ -->
    <dependency>
      <ah-project name="Commons-Util" workflow="build workflow [master]"/>
      <criteria status="success"/>
      <delivery artifact-set="Library">
        <directory>lib</directory>
      </delivery>
    </dependency>
    
    <dependency>
      <cs-project name="Jakarta Commons Codec"/>
      <criteria status="success"/>
      <delivery artifact-set="Default">

        <directory>lib</directory>
      </delivery>
    </dependency>

    <dependency>
      <cs-project name="Jakarta Commons Logging"/>
      <criteria status="success"/>
      <delivery artifact-set="Default">
        <directory>lib</directory>

      </delivery>
    </dependency>

    <dependency>
      <cs-project name="Jakarta Commons Lang"/>
      <criteria status="success"/>
      <delivery artifact-set="Default">
        <directory>lib</directory>
      </delivery>

    </dependency>

    <dependency>
      <cs-project name="Jakarta Commons Collections"/>
      <criteria status="success"/>

      <delivery artifact-set="Default">
        <directory>lib</directory>
      </delivery>
    </dependency>
    
    <dependency>
      <cs-project name="Jakarta Commons BeanUtils"/>
      <criteria status="success"/>
      <delivery artifact-set="Default">

        <directory>lib</directory>
      </delivery>
    </dependency>

     <!-- HTTP Builder, http client, jsonlib -->
    <dependency>
      <ah-project name="http-builder" workflow="build workflow [uc-master]"/>
      <criteria status="success"/>
      <delivery artifact-set="Library">
        <directory>lib</directory>
      </delivery>
    </dependency>
    
    <dependency>
      <cs-project name="groovy-backport-json"/>
      <criteria status="success"/>
      <delivery artifact-set="Runtime Libraries">
        <directory>lib</directory>
      </delivery>
    </dependency>
    
    <dependency>
      <cs-project name="Apache HttpComponents"/>
      <criteria status="success"/>
      <delivery artifact-set="lib">
        <directory>lib</directory>
      </delivery>
    </dependency>
    
        <dependency>
      <cs-project name="xml-resolver"/>
      <criteria status="success"/>
      <delivery artifact-set="lib">
        <directory>lib</directory>
      </delivery>
    </dependency>

    <dependency>
      <cs-project name="Apache Xerces"/>
      <criteria status="success"/>
      <delivery artifact-set="Default">
        <directory>lib</directory>
      </delivery>
    </dependency>

    <dependency>
      <cs-project name="NekoHTML"/>
      <criteria status="success"/>
      <delivery artifact-set="lib">
        <directory>lib</directory>
      </delivery>
    </dependency>

    <!-- ############################################################ -->
    <!-- BUILD                                                        -->
    <!-- ############################################################ -->

    <!-- the plugin-build.xml -->
    <dependency>
      <ah-project name="air-plugin-build-script" workflow="build workflow [master]"/>
      <criteria status="success"/>
      <delivery artifact-set="Dist">
        <directory>.</directory>
      </delivery>
    </dependency>

    <dependency>
      <ah-project name="air-plugin-ant-tasks" workflow="build workflow [master]"/>
      <criteria status="success"/>
      <delivery artifact-set="Dist">
        <directory>lib/build</directory>
      </delivery>
    </dependency>

    <!-- gives us the CommandHelper and XTrust groovies -->
    <dependency>
      <ah-project name="plugins" workflow="build workflow [master]"/>
      <criteria status="success"/>
      <delivery artifact-set="Source">
        <directory>lib/build/classes</directory>
      </delivery>
      <delivery artifact-set="Dist">
        <directory>lib/build</directory>
      </delivery>
    </dependency>

    <dependency>
      <cs-project name="Groovy"/>
      <criteria status="success"/>
      <delivery artifact-set="lib">
        <directory>lib/build</directory>
      </delivery>
    </dependency>

    <!-- ############################################################ -->
    <!-- TEST                                                         -->
    <!-- ############################################################ -->

    <dependency>
      <ah-project name="air-plugin-command" workflow="build workflow [master]"/>
      <criteria status="success"/>
      <delivery artifact-set="Library">
        <directory>lib/test</directory>
      </delivery>
    </dependency>

    <dependency>
      <ah-project name="Commons-Xml" workflow="build workflow [master]" />
      <criteria status="success" />
      <delivery artifact-set="Default">
        <directory>lib/test</directory>
      </delivery>
    </dependency>
    
   <dependency>
      <cs-project name="Jakarta Commons IO" />
      <criteria stamp="1.4" />
      <delivery artifact-set="Default">
        <directory>lib/test</directory>
        <directory>lib/validate</directory>
      </delivery>
    </dependency>
    
    <dependency>
      <cs-project name="JUnit"/>
      <criteria status="success"/>
      <delivery artifact-set="Default">
        <directory>lib/test</directory>
      </delivery>
    </dependency>
    
    <dependency>
      <cs-project name="Rhino"/>
      <criteria stamp="*" />
      <delivery artifact-set="Default">
        <directory>lib/test</directory>
      </delivery>
    </dependency>

    <dependency>
      <cs-project name="Apache-log4j"/>
      <criteria status="success"/>
      <delivery artifact-set="Default">
        <directory>lib/test</directory>
      </delivery>
    </dependency>

    <dependency>
      <ah-project name="Shell" workflow="build workflow [master]"/>
      <criteria status="success"/>
      <delivery artifact-set="Default">
        <directory>lib/test</directory>
      </delivery>
    </dependency>

    <dependency>
      <ah-project name="Commons-FileUtils" workflow="build workflow [master]"/>
      <criteria status="success"/>
      <delivery artifact-set="Default">
        <directory>lib/test</directory>
      </delivery>
    </dependency>

    <dependency>
      <ah-project name="Commons-Util" workflow="build workflow [master]"/>
      <criteria status="success"/>
      <delivery artifact-set="Library">
        <directory>lib/test</directory>
      </delivery>
    </dependency>

    <dependency>
      <ah-project name="NativeProcess" workflow="build workflow [master]"/>
      <criteria status="success"/>
      <delivery artifact-set="Jars">
        <directory>lib/test</directory>
      </delivery>
    </dependency>

    <dependency>
      <cs-project name="Jakarta Commons Lang"/>
      <criteria status="success"/>
      <delivery artifact-set="Default">
        <directory>lib/test</directory>
      </delivery>
    </dependency>

    <dependency>
      <cs-project name="Jakarta Commons Codec"/>
      <criteria status="success"/>
      <delivery artifact-set="Default">
        <directory>lib/test</directory>
      </delivery>
    </dependency>

    <!-- NATIVE OS SUPPORT -->
    <dependency>
        <ah-project name="WinAPI" workflow="build workflow [master]"/>
        <criteria status="success"/>
        <delivery artifact-set="Jars">
            <directory>lib/test</directory>
        </delivery>
        <delivery artifact-set="x64 DLLs">
            <directory>lib/test/native/windows/x64</directory>
        </delivery>
        <delivery artifact-set="x86 DLLs">
            <directory>lib/test/native/windows/x86</directory>
        </delivery>
    </dependency>

  </dependencies>
</project>
